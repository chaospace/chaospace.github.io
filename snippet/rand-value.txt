1:HL["/_next/static/media/122c360d7fe6d395-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/media/a15f2fce4b98b461-s.p.woff2",{"as":"font","type":"font/woff2"}]
3:HL["/_next/static/css/513fe6d1da0f3f41.css",{"as":"style"}]
4:HL["/_next/static/css/9f4f3a83d5f5bb0d.css",{"as":"style"}]
0:["hkCGFF6Eqg_Q4h39RZaEB",[[["",{"children":["(pages)",{"children":["snippet",{"children":[["slug","rand-value","c"],{"children":["__PAGE__?{\"slug\":[\"rand-value\"]}",{}]}]}]}]},"$undefined","$undefined",true],"$L5",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/513fe6d1da0f3f41.css","precedence":"next"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/9f4f3a83d5f5bb0d.css","precedence":"next"}]],"$L6"]]]]
7:I{"id":9588,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-1c2ef9bea347222f.js"],"name":"","async":false}
8:I{"id":196,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-1c2ef9bea347222f.js"],"name":"","async":false}
9:I{"id":2568,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-1c2ef9bea347222f.js"],"name":"","async":false}
a:I{"id":3466,"chunks":["272:static/chunks/webpack-1f925c00cec8420c.js","253:static/chunks/bce60fc1-0247e260c1ca1b9c.js","961:static/chunks/961-90edfa57f01894b3.js"],"name":"default","async":false}
b:I{"id":372,"chunks":["272:static/chunks/webpack-1f925c00cec8420c.js","253:static/chunks/bce60fc1-0247e260c1ca1b9c.js","961:static/chunks/961-90edfa57f01894b3.js"],"name":"default","async":false}
d:I{"id":3245,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-1c2ef9bea347222f.js"],"name":"","async":false}
5:[["$","html",null,{"className":"__variable_21dd0c","suppressHydrationWarning":true,"children":["$","body",null,{"children":["$","$L7",null,{"children":[["$","$L8",null,{"id":"main-content","className":"relative flex flex-col border-l-gray-200 dark:border-l-gray-800","children":[["$","$L9",null,{"id":"content-header","className":"sticky z-10 flex flex-col top-0"}],["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[["$","section",null,{"className":"relative mx-auto w-full max-w-7xl px-5 sm:px-10 mb-20","children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children","snippet","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children","snippet","children",["slug","rand-value","c"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"slug\":[\"rand-value\"]}"},"styles":[]}],"segment":["slug","rand-value","c"]},"styles":[]}],"segment":"snippet"},"styles":[]}]}],null],"segment":"(pages)"},"styles":[]}],["$","hr",null,{"className":"border-none h-px bg-gray-200 dark:bg-gray-800"}],["$","footer",null,{"className":"w-full px-10 py-8 text-center","children":[["$","p",null,{"className":"text-xs","children":"chaospace • © 2023 All rights reserved • Next.js Blog"}],["$","p",null,{"className":"text-xs","children":["Source code available on ",["$","a",null,{"className":"underline","children":"GitHub"}]]}]]}]]}],["$","$Ld",null,{}]]}]}]}],null]
6:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"MathUtil | chaospace's Blog"}],["$","meta","2",{"name":"description","content":"틈틈이 기억나는 내용을 정리하는 공간"}],["$","meta","3",{"name":"keywords","content":"lerp,range,invertLerp,mapValue"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","5",{"name":"creator","content":"chaospace"}],["$","link","6",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","7",{"name":"next-size-adjust"}]]
e:I{"id":9378,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","716:static/chunks/app/(pages)/snippet/[...slug]/page-0cb659ae31ae1e90.js"],"name":"","async":false}
10:I{"id":2375,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","716:static/chunks/app/(pages)/snippet/[...slug]/page-0cb659ae31ae1e90.js"],"name":"","async":false}
11:I{"id":3781,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","716:static/chunks/app/(pages)/snippet/[...slug]/page-0cb659ae31ae1e90.js"],"name":"","async":false}
12:I{"id":2092,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","716:static/chunks/app/(pages)/snippet/[...slug]/page-0cb659ae31ae1e90.js"],"name":"","async":false}
f:T5637,/*@jsxRuntime automatic @jsxImportSource react*/
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = Object.assign({
    p: "p",
    strong: "strong",
    h2: "h2",
    div: "div",
    pre: "pre",
    code: "code",
    span: "span"
  }, _provideComponents(), props.components);
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: ["인터렉티브 UI를 구현하다 보면 동적인 값을 제어할 일이 많은데 ", _jsx(_components.strong, {
        children: "p5"
      }), ", ", _jsx(_components.strong, {
        children: "processing"
      }), "에서 사용되는 ", _jsx("code", {
        children: "map"
      }), "함수를 보고 비슷한 코드를 util성으로 만들어 정리해 둔다."]
    }), "\n", _jsx(_components.h2, {
      id: "range",
      children: "range"
    }), "\n", _jsx(_components.p, {
      children: "입력값 + ~ - *0.5 범위에 해당하는 값을 반환"
    }), "\n", _jsx(_components.div, {
      className: "remark-code-title",
      children: "range"
    }), "\n", _jsx(_components.pre, {
      className: "language-typescript",
      children: _jsx(_components.code, {
        className: "language-typescript code-highlight",
        children: _jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token keyword",
            children: "const"
          }), " ", _jsx(_components.span, {
            className: "token function-variable function",
            children: "range"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "="
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "v", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), " ", _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "=>"
          }), " v ", _jsx(_components.span, {
            className: "token operator",
            children: "*"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "Math", _jsx(_components.span, {
            className: "token punctuation",
            children: "."
          }), _jsx(_components.span, {
            className: "token function",
            children: "random"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "-"
          }), " ", _jsx(_components.span, {
            className: "token number",
            children: ".5"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ";"
          }), "\n"]
        })
      })
    }), "\n", _jsx(_components.h2, {
      id: "randomfloat",
      children: "randomFloat"
    }), "\n", _jsx(_components.p, {
      children: "입력값에 따른 랜덤 값 반환"
    }), "\n", _jsx(_components.div, {
      className: "remark-code-title",
      children: "randomFloat"
    }), "\n", _jsx(_components.pre, {
      className: "language-typescript",
      children: _jsx(_components.code, {
        className: "language-typescript code-highlight",
        children: _jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token keyword",
            children: "const"
          }), " ", _jsx(_components.span, {
            className: "token function-variable function",
            children: "randomFloat"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "="
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "v", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), " ", _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "=>"
          }), " Math", _jsx(_components.span, {
            className: "token punctuation",
            children: "."
          }), _jsx(_components.span, {
            className: "token function",
            children: "random"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "*"
          }), " v", _jsx(_components.span, {
            className: "token punctuation",
            children: ";"
          }), "\n"]
        })
      })
    }), "\n", _jsx(_components.h2, {
      id: "spreadfloat",
      children: "spreadFloat"
    }), "\n", _jsx(_components.p, {
      children: "min~max사이 랜덤 값 반환"
    }), "\n", _jsx(_components.div, {
      className: "remark-code-title",
      children: "spreadFloat"
    }), "\n", _jsx(_components.pre, {
      className: "language-typescript",
      children: _jsx(_components.code, {
        className: "language-typescript code-highlight",
        children: _jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token keyword",
            children: "const"
          }), " ", _jsx(_components.span, {
            className: "token function-variable function",
            children: "spreadFloat"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "="
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "min", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), " ", _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " max", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), " ", _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "=>"
          }), " min ", _jsx(_components.span, {
            className: "token operator",
            children: "+"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), _jsx(_components.span, {
            className: "token operator",
            children: "~"
          }), _jsx(_components.span, {
            className: "token operator",
            children: "~"
          }), _jsx(_components.span, {
            className: "token function",
            children: "randomFloat"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "max ", _jsx(_components.span, {
            className: "token operator",
            children: "+"
          }), " ", _jsx(_components.span, {
            className: "token number",
            children: "1"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "-"
          }), " min", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ";"
          }), "\n"]
        })
      })
    }), "\n", _jsx(_components.h2, {
      id: "lerp",
      children: "lerp"
    }), "\n", _jsx(_components.p, {
      children: "from ~ to 범위 중 현재 비율에 값을 반환"
    }), "\n", _jsx(_components.div, {
      className: "remark-code-title",
      children: "lerp"
    }), "\n", _jsx(_components.pre, {
      className: "language-typescript",
      children: _jsxs(_components.code, {
        className: "language-typescript code-highlight",
        children: [_jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token keyword",
            children: "const"
          }), " ", _jsx(_components.span, {
            className: "token function-variable function",
            children: "lerp"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "="
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "from", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " to", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " rate", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "=>"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "{"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: ["    ", _jsx(_components.span, {
            className: "token keyword",
            children: "return"
          }), " from ", _jsx(_components.span, {
            className: "token operator",
            children: "*"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), " ", _jsx(_components.span, {
            className: "token number",
            children: "1"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "-"
          }), " rate ", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "+"
          }), " to ", _jsx(_components.span, {
            className: "token operator",
            children: "*"
          }), " rate", _jsx(_components.span, {
            className: "token punctuation",
            children: ";"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token punctuation",
            children: "}"
          }), "\n"]
        })]
      })
    }), "\n", _jsx(_components.h2, {
      id: "invertlerp",
      children: "invertLerp"
    }), "\n", _jsx(_components.p, {
      children: "from ~ to 범위값을 0~1로 반환"
    }), "\n", _jsx(_components.div, {
      className: "remark-code-title",
      children: "invertLerp"
    }), "\n", _jsx(_components.pre, {
      className: "language-typescript",
      children: _jsxs(_components.code, {
        className: "language-typescript code-highlight",
        children: [_jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token keyword",
            children: "const"
          }), " ", _jsx(_components.span, {
            className: "token function-variable function",
            children: "invertLerp"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "="
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "value", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " from", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " to", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "=>"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "{"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: ["    ", _jsx(_components.span, {
            className: "token keyword",
            children: "return"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "from ", _jsx(_components.span, {
            className: "token operator",
            children: "==="
          }), " to ", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "?"
          }), " ", _jsx(_components.span, {
            className: "token number",
            children: "0"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), " value ", _jsx(_components.span, {
            className: "token operator",
            children: "-"
          }), " frome ", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), _jsx(_components.span, {
            className: "token operator",
            children: "/"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), " to ", _jsx(_components.span, {
            className: "token operator",
            children: "-"
          }), " from ", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token punctuation",
            children: "}"
          }), "\n"]
        })]
      })
    }), "\n", _jsx(_components.h2, {
      id: "remap",
      children: "reMap"
    }), "\n", _jsx(_components.p, {
      children: "from ~ to 범위값을 새로운 범위 값으로 변환"
    }), "\n", _jsx(_components.div, {
      className: "remark-code-title",
      children: "reMap"
    }), "\n", _jsx(_components.pre, {
      className: "language-typescript",
      children: _jsxs(_components.code, {
        className: "language-typescript code-highlight",
        children: [_jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token keyword",
            children: "const"
          }), " ", _jsx(_components.span, {
            className: "token function-variable function",
            children: "reMap"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "="
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "value", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " from", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " to", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " nFrom", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " nTo", _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), _jsx(_components.span, {
            className: "token builtin",
            children: "number"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token operator",
            children: "=>"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "{"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: ["    ", _jsx(_components.span, {
            className: "token keyword",
            children: "const"
          }), " p ", _jsx(_components.span, {
            className: "token operator",
            children: "="
          }), "  ", _jsx(_components.span, {
            className: "token function",
            children: "invertLerp"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "value", _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " from", _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " to", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ";"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: ["    ", _jsx(_components.span, {
            className: "token keyword",
            children: "return"
          }), " ", _jsx(_components.span, {
            className: "token function",
            children: "lerp"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "nFrom", _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " nTo", _jsx(_components.span, {
            className: "token punctuation",
            children: ","
          }), " p", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ";"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token punctuation",
            children: "}"
          }), "\n"]
        })]
      })
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);
  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {
    children: _jsx(_createMdxContent, props)
  })) : _createMdxContent(props);
}
return {
  default: MDXContent
};
c:[["$","article",null,{"children":[["$","h1",null,{"className":"font-bold text-3xl","children":"MathUtil"}],["$","p",null,{"className":"my-1","children":"변경되는 값 혹은 범위조정에 자주 사용되는 코드모음"}],["$","span",null,{"className":"flex flex-wrap gap-2 items-center text-xs","children":[["$","span",null,{"className":"inline-flex items-center basis-24 flex-grow-0","children":[["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"far","data-icon":"calendar","className":"svg-inline--fa fa-calendar fa-xs ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z","style":{}}]}],["$","time",null,{"className":"pl-1","dateTime":"2023-04-23","children":"2023-04-23"}]]}],["$","span",null,{"className":"inline-flex items-center basis-24 flex-grow-0","children":[["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"far","data-icon":"clock","className":"svg-inline--fa fa-clock fa-xs ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z","style":{}}]}],["$","span",null,{"className":"pl-1","children":"2 minutes"}]]}]]}],["$","hr",null,{"className":"border-none h-px bg-gray-200 dark:bg-gray-800 my-10"}]]}],["$","div",null,{"className":"lg:grid lg:grid-cols-[1fr_260px] lg:gap-8","children":[["$","div",null,{"data-content":"post-area","className":"prose max-w-[796px] dark:prose-dark","children":[["$","$Le",null,{"compiledSource":"$f","frontmatter":{"title":"MathUtil","date":"$D2023-04-23T00:00:00.000Z","tags":["lerp","range","invertLerp","mapValue"],"draft":false,"summary":"변경되는 값 혹은 범위조정에 자주 사용되는 코드모음","readTime":1.485},"scope":{"toc":[{"value":"range","url":"#range","depth":2},{"value":"randomFloat","url":"#randomfloat","depth":2},{"value":"spreadFloat","url":"#spreadfloat","depth":2},{"value":"lerp","url":"#lerp","depth":2},{"value":"invertLerp","url":"#invertlerp","depth":2},{"value":"reMap","url":"#remap","depth":2}]},"toc":[{"value":"range","url":"#range","depth":2},{"value":"randomFloat","url":"#randomfloat","depth":2},{"value":"spreadFloat","url":"#spreadfloat","depth":2},{"value":"lerp","url":"#lerp","depth":2},{"value":"invertLerp","url":"#invertlerp","depth":2},{"value":"reMap","url":"#remap","depth":2}]}],["$","$L10",null,{}]]}],["$","$L11",null,{"className":"hidden lg:block","toc":[{"value":"range","url":"#range","depth":2},{"value":"randomFloat","url":"#randomfloat","depth":2},{"value":"spreadFloat","url":"#spreadfloat","depth":2},{"value":"lerp","url":"#lerp","depth":2},{"value":"invertLerp","url":"#invertlerp","depth":2},{"value":"reMap","url":"#remap","depth":2}]}],["$","$L12",null,{"toc":[{"value":"range","url":"#range","depth":2},{"value":"randomFloat","url":"#randomfloat","depth":2},{"value":"spreadFloat","url":"#spreadfloat","depth":2},{"value":"lerp","url":"#lerp","depth":2},{"value":"invertLerp","url":"#invertlerp","depth":2},{"value":"reMap","url":"#remap","depth":2}]}]]}]]
