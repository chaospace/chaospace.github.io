1:HL["/_next/static/media/122c360d7fe6d395-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/media/a15f2fce4b98b461-s.p.woff2",{"as":"font","type":"font/woff2"}]
3:HL["/_next/static/css/513fe6d1da0f3f41.css",{"as":"style"}]
4:HL["/_next/static/css/9f4f3a83d5f5bb0d.css",{"as":"style"}]
0:["5gdqMtlEq_5R0an4Z2HfL",[[["",{"children":["(pages)",{"children":["posts",{"children":[["slug","github-markdown-guide","c"],{"children":["__PAGE__?{\"slug\":[\"github-markdown-guide\"]}",{}]}]}]}]},"$undefined","$undefined",true],"$L5",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/513fe6d1da0f3f41.css","precedence":"next"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/9f4f3a83d5f5bb0d.css","precedence":"next"}]],"$L6"]]]]
7:I{"id":9588,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-c85cad3ddcf59427.js"],"name":"","async":false}
8:I{"id":196,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-c85cad3ddcf59427.js"],"name":"","async":false}
9:I{"id":2568,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-c85cad3ddcf59427.js"],"name":"","async":false}
a:I{"id":3466,"chunks":["272:static/chunks/webpack-1f925c00cec8420c.js","253:static/chunks/bce60fc1-0247e260c1ca1b9c.js","961:static/chunks/961-90edfa57f01894b3.js"],"name":"default","async":false}
b:I{"id":372,"chunks":["272:static/chunks/webpack-1f925c00cec8420c.js","253:static/chunks/bce60fc1-0247e260c1ca1b9c.js","961:static/chunks/961-90edfa57f01894b3.js"],"name":"default","async":false}
d:I{"id":3245,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","578:static/chunks/578-7478916a970fcb49.js","582:static/chunks/582-a0d280170724f0ec.js","185:static/chunks/app/layout-c85cad3ddcf59427.js"],"name":"","async":false}
5:[["$","html",null,{"className":"__variable_21dd0c","suppressHydrationWarning":true,"children":["$","body",null,{"children":["$","$L7",null,{"children":[["$","$L8",null,{"id":"main-content","className":"relative flex flex-col border-l-gray-200 dark:border-l-gray-800","children":[["$","$L9",null,{"id":"content-header","className":"sticky z-10 flex flex-col top-0"}],["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[["$","section",null,{"className":"relative mx-auto w-full max-w-7xl px-5 sm:px-10 mb-20","children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children","posts","children",["slug","github-markdown-guide","c"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"slug\":[\"github-markdown-guide\"]}"},"styles":[]}],"segment":["slug","github-markdown-guide","c"]},"styles":[]}],"segment":"posts"},"styles":[]}]}],null],"segment":"(pages)"},"styles":[]}],["$","hr",null,{"className":"border-none h-px bg-gray-200 dark:bg-gray-800"}],["$","footer",null,{"className":"w-full px-10 py-8 text-center","children":[["$","p",null,{"className":"text-xs","children":"chaospace • © 2023 All rights reserved • Next.js Blog"}],["$","p",null,{"className":"text-xs","children":["Source code available on ",["$","a",null,{"className":"underline","children":"GitHub"}]]}]]}]]}],["$","$Ld",null,{}]]}]}]}],null]
6:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Markdown Guide | chaospace's Blog"}],["$","meta","2",{"name":"description","content":"틈틈이 기억나는 내용을 정리하는 공간"}],["$","meta","3",{"name":"keywords","content":"github,guide"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","5",{"name":"creator","content":"chaospace"}],["$","link","6",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","7",{"name":"next-size-adjust"}]]
e:I{"id":9378,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","863:static/chunks/app/(pages)/posts/[...slug]/page-508d4e87c56fd634.js"],"name":"","async":false}
10:I{"id":2375,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","863:static/chunks/app/(pages)/posts/[...slug]/page-508d4e87c56fd634.js"],"name":"","async":false}
11:I{"id":3781,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","863:static/chunks/app/(pages)/posts/[...slug]/page-508d4e87c56fd634.js"],"name":"","async":false}
12:I{"id":2092,"chunks":["957:static/chunks/59925f94-96b9832d7377ad60.js","599:static/chunks/599-d959104802c662bd.js","846:static/chunks/846-f9a0044b6873eac4.js","947:static/chunks/947-f23988b27fe3e696.js","863:static/chunks/app/(pages)/posts/[...slug]/page-508d4e87c56fd634.js"],"name":"","async":false}
f:T528a,/*@jsxRuntime automatic @jsxImportSource react*/
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = Object.assign({
    h1: "h1",
    p: "p",
    code: "code",
    a: "a",
    h2: "h2",
    pre: "pre",
    span: "span",
    h4: "h4",
    em: "em",
    strong: "strong",
    h3: "h3",
    ul: "ul",
    li: "li",
    ol: "ol",
    img: "img",
    blockquote: "blockquote",
    div: "div",
    sup: "sup",
    input: "input",
    table: "table",
    thead: "thead",
    tr: "tr",
    th: "th",
    tbody: "tbody",
    td: "td",
    del: "del",
    section: "section"
  }, _provideComponents(), props.components);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      id: "introduction",
      children: "Introduction"
    }), "\n", _jsxs(_components.p, {
      children: ["Markdown and Mdx parsing is supported via ", _jsx(_components.code, {
        children: "unified"
      }), ", and other remark and rehype packages. ", _jsx(_components.code, {
        children: "next-mdx-remote"
      }), " allows us to parse ", _jsx(_components.code, {
        children: ".mdx"
      }), " and ", _jsx(_components.code, {
        children: ".md"
      }), " files in a more flexible manner without touching webpack."]
    }), "\n", _jsxs(_components.p, {
      children: ["GitHub flavored markdown is used. ", _jsx(_components.code, {
        children: "mdx-prism"
      }), " provides syntax highlighting capabilities for code blocks. Here's a demo of how everything looks."]
    }), "\n", _jsxs(_components.p, {
      children: ["The following markdown cheatsheet is adapted from: ", _jsx(_components.a, {
        href: "https://guides.github.com/features/mastering-markdown/",
        children: "https://guides.github.com/features/mastering-markdown/"
      })]
    }), "\n", _jsx(_components.h1, {
      id: "what-is-markdown",
      children: "What is Markdown?"
    }), "\n", _jsxs(_components.p, {
      children: ["Markdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown. Mostly, Markdown is just regular text with a few non-alphabetic characters thrown in, like ", _jsx(_components.code, {
        children: "#"
      }), " or ", _jsx(_components.code, {
        children: "*"
      }), "."]
    }), "\n", _jsx(_components.h1, {
      id: "syntax-guide",
      children: "Syntax guide"
    }), "\n", _jsx(_components.p, {
      children: "Here’s an overview of Markdown syntax that you can use anywhere on GitHub.com or in your own text files."
    }), "\n", _jsx(_components.h2, {
      id: "headers",
      children: "Headers"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "# This is a h1 tag\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "## This is a h2 tag\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "#### This is a h4 tag\n"
        })]
      })
    }), "\n", _jsx(_components.h1, {
      id: "this-is-a-h1-tag",
      children: "This is a h1 tag"
    }), "\n", _jsx(_components.h2, {
      id: "this-is-a-h2-tag",
      children: "This is a h2 tag"
    }), "\n", _jsx(_components.h4, {
      id: "this-is-a-h4-tag",
      children: "This is a h4 tag"
    }), "\n", _jsx(_components.h2, {
      id: "emphasis",
      children: "Emphasis"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "_This text will be italic_\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "**This text will be bold**\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "_You **can** combine them_\n"
        })]
      })
    }), "\n", _jsx(_components.p, {
      children: _jsx(_components.em, {
        children: "This text will be italic"
      })
    }), "\n", _jsx(_components.p, {
      children: _jsx(_components.strong, {
        children: "This text will be bold"
      })
    }), "\n", _jsx(_components.p, {
      children: _jsxs(_components.em, {
        children: ["You ", _jsx(_components.strong, {
          children: "can"
        }), " combine them"]
      })
    }), "\n", _jsx(_components.h2, {
      id: "lists",
      children: "Lists"
    }), "\n", _jsx(_components.h3, {
      id: "unordered",
      children: "Unordered"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "- Item 1\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "- Item 2\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "  - Item 2a\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "  - Item 2b\n"
        })]
      })
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsx(_components.li, {
        children: "Item 1"
      }), "\n", _jsxs(_components.li, {
        children: ["Item 2", "\n", _jsxs(_components.ul, {
          children: ["\n", _jsx(_components.li, {
            children: "Item 2a"
          }), "\n", _jsx(_components.li, {
            children: "Item 2b"
          }), "\n"]
        }), "\n"]
      }), "\n"]
    }), "\n", _jsx(_components.h3, {
      id: "ordered",
      children: "Ordered"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "1. Item 1\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "1. Item 2\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "1. Item 3\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "   1. Item 3a\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "   1. Item 3b\n"
        })]
      })
    }), "\n", _jsxs(_components.ol, {
      children: ["\n", _jsx(_components.li, {
        children: "Item 1"
      }), "\n", _jsx(_components.li, {
        children: "Item 2"
      }), "\n", _jsxs(_components.li, {
        children: ["Item 3", "\n", _jsxs(_components.ol, {
          children: ["\n", _jsx(_components.li, {
            children: "Item 3a"
          }), "\n", _jsx(_components.li, {
            children: "Item 3b"
          }), "\n"]
        }), "\n"]
      }), "\n"]
    }), "\n", _jsx(_components.h2, {
      id: "images",
      children: "Images"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "![GitHub Logo](https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png)\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "Format: ![Alt Text](url)\n"
        })]
      })
    }), "\n", _jsx(_components.p, {
      children: _jsx(_components.img, {
        src: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
        alt: "GitHub Logo"
      })
    }), "\n", _jsx(_components.h2, {
      id: "links",
      children: "Links"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "http://github.com - automatic!\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "[GitHub](http://github.com)\n"
        })]
      })
    }), "\n", _jsxs(_components.p, {
      children: [_jsx(_components.a, {
        href: "http://github.com",
        children: "http://github.com"
      }), " - automatic!\n", _jsx(_components.a, {
        href: "http://github.com",
        children: "GitHub"
      })]
    }), "\n", _jsx(_components.h2, {
      id: "blockquotes",
      children: "Blockquotes"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "As Kanye West said:\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "> We're living the future so\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "> the present is our past.\n"
        })]
      })
    }), "\n", _jsx(_components.p, {
      children: "As Kanye West said:"
    }), "\n", _jsxs(_components.blockquote, {
      children: ["\n", _jsx(_components.p, {
        children: "We're living the future so\nthe present is our past."
      }), "\n"]
    }), "\n", _jsx(_components.h2, {
      id: "inline-code",
      children: "Inline code"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "I think you should use an\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "`<addr>` element here instead.\n"
        })]
      })
    }), "\n", _jsxs(_components.p, {
      children: ["I think you should use an\n", _jsx(_components.code, {
        children: "<addr>"
      }), " element here instead."]
    }), "\n", _jsx(_components.h2, {
      id: "syntax-highlighting",
      children: "Syntax highlighting"
    }), "\n", _jsxs(_components.p, {
      children: ["Here’s an example of how you can use syntax highlighting with ", _jsx(_components.a, {
        href: "https://help.github.com/articles/basic-writing-and-formatting-syntax/",
        children: "GitHub Flavored Markdown"
      }), ":"]
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "```js:fancyAlert.js\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "function fancyAlert(arg) {\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "  if (arg) {\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "    $.facebox({ div: '#foo' })\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "  }\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "}\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "```\n"
        })]
      })
    }), "\n", _jsx(_components.p, {
      children: "And here's how it looks - nicely colored with styled code titles!"
    }), "\n", _jsx(_components.div, {
      className: "remark-code-title",
      children: "fancyAlert.js"
    }), "\n", _jsx(_components.pre, {
      className: "language-js",
      children: _jsxs(_components.code, {
        className: "language-js code-highlight",
        children: [_jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token keyword",
            children: "function"
          }), " ", _jsx(_components.span, {
            className: "token function",
            children: "fancyAlert"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), _jsx(_components.span, {
            className: "token parameter",
            children: "arg"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "{"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: ["  ", _jsx(_components.span, {
            className: "token keyword control-flow",
            children: "if"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), "arg", _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "{"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: ["    $", _jsx(_components.span, {
            className: "token punctuation",
            children: "."
          }), _jsx(_components.span, {
            className: "token method function property-access",
            children: "facebox"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "("
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: "{"
          }), " ", _jsx(_components.span, {
            className: "token literal-property property",
            children: "div"
          }), _jsx(_components.span, {
            className: "token operator",
            children: ":"
          }), " ", _jsx(_components.span, {
            className: "token string",
            children: "'#foo'"
          }), " ", _jsx(_components.span, {
            className: "token punctuation",
            children: "}"
          }), _jsx(_components.span, {
            className: "token punctuation",
            children: ")"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: ["  ", _jsx(_components.span, {
            className: "token punctuation",
            children: "}"
          }), "\n"]
        }), _jsxs(_components.span, {
          className: "code-line",
          children: [_jsx(_components.span, {
            className: "token punctuation",
            children: "}"
          }), "\n"]
        })]
      })
    }), "\n", _jsx(_components.h2, {
      id: "footnotes",
      children: "Footnotes"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "Here is a simple footnote[^1]. With some additional text after it.\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "[^1]: My reference.\n"
        })]
      })
    }), "\n", _jsxs(_components.p, {
      children: ["Here is a simple footnote", _jsx(_components.sup, {
        children: _jsx(_components.a, {
          href: "#user-content-fn-1",
          id: "user-content-fnref-1",
          "data-footnote-ref": true,
          "aria-describedby": "footnote-label",
          children: "1"
        })
      }), ". With some additional text after it."]
    }), "\n", _jsx(_components.h2, {
      id: "task-lists",
      children: "Task Lists"
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "- [x] list syntax required (any unordered or ordered list supported)\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "- [x] this is a complete item\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "- [ ] this is an incomplete item\n"
        })]
      })
    }), "\n", _jsxs(_components.ul, {
      className: "contains-task-list",
      children: ["\n", _jsxs(_components.li, {
        className: "task-list-item",
        children: [_jsx(_components.input, {
          type: "checkbox",
          checked: true,
          disabled: true
        }), " ", "list syntax required (any unordered or ordered list supported)"]
      }), "\n", _jsxs(_components.li, {
        className: "task-list-item",
        children: [_jsx(_components.input, {
          type: "checkbox",
          checked: true,
          disabled: true
        }), " ", "this is a complete item"]
      }), "\n", _jsxs(_components.li, {
        className: "task-list-item",
        children: [_jsx(_components.input, {
          type: "checkbox",
          disabled: true
        }), " ", "this is an incomplete item"]
      }), "\n"]
    }), "\n", _jsx(_components.h2, {
      id: "tables",
      children: "Tables"
    }), "\n", _jsxs(_components.p, {
      children: ["You can create tables by assembling a list of words and dividing them with hyphens ", _jsx(_components.code, {
        children: "-"
      }), " (for the first row), and then separating each column with a pipe ", _jsx(_components.code, {
        children: "|"
      }), ":"]
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "code-highlight",
        children: [_jsx(_components.span, {
          className: "code-line",
          children: "| First Header                | Second Header                |\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "| --------------------------- | ---------------------------- |\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "| Content from cell 1         | Content from cell 2          |\n"
        }), _jsx(_components.span, {
          className: "code-line",
          children: "| Content in the first column | Content in the second column |\n"
        })]
      })
    }), "\n", _jsxs(_components.table, {
      children: [_jsx(_components.thead, {
        children: _jsxs(_components.tr, {
          children: [_jsx(_components.th, {
            children: "First Header"
          }), _jsx(_components.th, {
            children: "Second Header"
          })]
        })
      }), _jsxs(_components.tbody, {
        children: [_jsxs(_components.tr, {
          children: [_jsx(_components.td, {
            children: "Content from cell 1"
          }), _jsx(_components.td, {
            children: "Content from cell 2"
          })]
        }), _jsxs(_components.tr, {
          children: [_jsx(_components.td, {
            children: "Content in the first column"
          }), _jsx(_components.td, {
            children: "Content in the second column"
          })]
        })]
      })]
    }), "\n", _jsx(_components.h2, {
      id: "strikethrough",
      children: "Strikethrough"
    }), "\n", _jsxs(_components.p, {
      children: ["Any word wrapped with two tildes (like ", _jsx(_components.code, {
        children: "~~this~~"
      }), ") will appear ", _jsx(_components.del, {
        children: "crossed out"
      }), "."]
    }), "\n", _jsxs(_components.section, {
      "data-footnotes": true,
      className: "footnotes",
      children: [_jsx(_components.h2, {
        className: "sr-only",
        id: "footnote-label",
        children: "Footnotes"
      }), "\n", _jsxs(_components.ol, {
        children: ["\n", _jsxs(_components.li, {
          id: "user-content-fn-1",
          children: ["\n", _jsxs(_components.p, {
            children: ["My reference. ", _jsx(_components.a, {
              href: "#user-content-fnref-1",
              "data-footnote-backref": true,
              className: "data-footnote-backref",
              "aria-label": "Back to content",
              children: "↩"
            })]
          }), "\n"]
        }), "\n"]
      }), "\n"]
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);
  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {
    children: _jsx(_createMdxContent, props)
  })) : _createMdxContent(props);
}
return {
  default: MDXContent
};
c:[["$","article",null,{"children":[["$","h1",null,{"className":"font-bold text-3xl","children":"Markdown Guide"}],["$","p",null,{"className":"my-1","children":"Markdown cheatsheet for all your blogging needs - headers, lists, images, tables and more! An illustrated guide based on GitHub Flavored Markdown."}],["$","span",null,{"className":"flex flex-wrap gap-2 items-center text-xs","children":[["$","span",null,{"className":"inline-flex items-center basis-24 flex-grow-0","children":[["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"far","data-icon":"calendar","className":"svg-inline--fa fa-calendar fa-xs ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z","style":{}}]}],["$","time",null,{"className":"pl-1","dateTime":"2019-10-11","children":"2019-10-11"}]]}],["$","span",null,{"className":"inline-flex items-center basis-24 flex-grow-0","children":[["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"far","data-icon":"clock","className":"svg-inline--fa fa-clock fa-xs ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z","style":{}}]}],["$","span",null,{"className":"pl-1","children":"4 minutes"}]]}]]}],["$","hr",null,{"className":"border-none h-px bg-gray-200 dark:bg-gray-800 my-10"}]]}],["$","div",null,{"className":"lg:grid lg:grid-cols-[1fr_260px] lg:gap-8","children":[["$","div",null,{"data-content":"post-area","className":"prose max-w-[796px] dark:prose-dark","children":[["$","$Le",null,{"compiledSource":"$f","frontmatter":{"title":"Markdown Guide","date":"$D2019-10-11T00:00:00.000Z","tags":["github","guide"],"draft":false,"summary":"Markdown cheatsheet for all your blogging needs - headers, lists, images, tables and more! An illustrated guide based on GitHub Flavored Markdown.","readTime":3.33},"scope":{"toc":[{"value":"Introduction","url":"#introduction","depth":1},{"value":"What is Markdown?","url":"#what-is-markdown","depth":1},{"value":"Syntax guide","url":"#syntax-guide","depth":1},{"value":"Headers","url":"#headers","depth":2},{"value":"This is a h1 tag","url":"#this-is-a-h1-tag","depth":1},{"value":"This is a h2 tag","url":"#this-is-a-h2-tag","depth":2},{"value":"This is a h4 tag","url":"#this-is-a-h4-tag","depth":4},{"value":"Emphasis","url":"#emphasis","depth":2},{"value":"Lists","url":"#lists","depth":2},{"value":"Unordered","url":"#unordered","depth":3},{"value":"Ordered","url":"#ordered","depth":3},{"value":"Images","url":"#images","depth":2},{"value":"Links","url":"#links","depth":2},{"value":"Blockquotes","url":"#blockquotes","depth":2},{"value":"Inline code","url":"#inline-code","depth":2},{"value":"Syntax highlighting","url":"#syntax-highlighting","depth":2},{"value":"Footnotes","url":"#footnotes","depth":2},{"value":"Task Lists","url":"#task-lists","depth":2},{"value":"Tables","url":"#tables","depth":2},{"value":"Strikethrough","url":"#strikethrough","depth":2}]},"toc":[{"value":"Introduction","url":"#introduction","depth":1},{"value":"What is Markdown?","url":"#what-is-markdown","depth":1},{"value":"Syntax guide","url":"#syntax-guide","depth":1},{"value":"Headers","url":"#headers","depth":2},{"value":"This is a h1 tag","url":"#this-is-a-h1-tag","depth":1},{"value":"This is a h2 tag","url":"#this-is-a-h2-tag","depth":2},{"value":"This is a h4 tag","url":"#this-is-a-h4-tag","depth":4},{"value":"Emphasis","url":"#emphasis","depth":2},{"value":"Lists","url":"#lists","depth":2},{"value":"Unordered","url":"#unordered","depth":3},{"value":"Ordered","url":"#ordered","depth":3},{"value":"Images","url":"#images","depth":2},{"value":"Links","url":"#links","depth":2},{"value":"Blockquotes","url":"#blockquotes","depth":2},{"value":"Inline code","url":"#inline-code","depth":2},{"value":"Syntax highlighting","url":"#syntax-highlighting","depth":2},{"value":"Footnotes","url":"#footnotes","depth":2},{"value":"Task Lists","url":"#task-lists","depth":2},{"value":"Tables","url":"#tables","depth":2},{"value":"Strikethrough","url":"#strikethrough","depth":2}]}],["$","$L10",null,{}]]}],["$","$L11",null,{"className":"hidden lg:block","toc":[{"value":"Introduction","url":"#introduction","depth":1},{"value":"What is Markdown?","url":"#what-is-markdown","depth":1},{"value":"Syntax guide","url":"#syntax-guide","depth":1},{"value":"Headers","url":"#headers","depth":2},{"value":"This is a h1 tag","url":"#this-is-a-h1-tag","depth":1},{"value":"This is a h2 tag","url":"#this-is-a-h2-tag","depth":2},{"value":"This is a h4 tag","url":"#this-is-a-h4-tag","depth":4},{"value":"Emphasis","url":"#emphasis","depth":2},{"value":"Lists","url":"#lists","depth":2},{"value":"Unordered","url":"#unordered","depth":3},{"value":"Ordered","url":"#ordered","depth":3},{"value":"Images","url":"#images","depth":2},{"value":"Links","url":"#links","depth":2},{"value":"Blockquotes","url":"#blockquotes","depth":2},{"value":"Inline code","url":"#inline-code","depth":2},{"value":"Syntax highlighting","url":"#syntax-highlighting","depth":2},{"value":"Footnotes","url":"#footnotes","depth":2},{"value":"Task Lists","url":"#task-lists","depth":2},{"value":"Tables","url":"#tables","depth":2},{"value":"Strikethrough","url":"#strikethrough","depth":2}]}],["$","$L12",null,{"toc":[{"value":"Introduction","url":"#introduction","depth":1},{"value":"What is Markdown?","url":"#what-is-markdown","depth":1},{"value":"Syntax guide","url":"#syntax-guide","depth":1},{"value":"Headers","url":"#headers","depth":2},{"value":"This is a h1 tag","url":"#this-is-a-h1-tag","depth":1},{"value":"This is a h2 tag","url":"#this-is-a-h2-tag","depth":2},{"value":"This is a h4 tag","url":"#this-is-a-h4-tag","depth":4},{"value":"Emphasis","url":"#emphasis","depth":2},{"value":"Lists","url":"#lists","depth":2},{"value":"Unordered","url":"#unordered","depth":3},{"value":"Ordered","url":"#ordered","depth":3},{"value":"Images","url":"#images","depth":2},{"value":"Links","url":"#links","depth":2},{"value":"Blockquotes","url":"#blockquotes","depth":2},{"value":"Inline code","url":"#inline-code","depth":2},{"value":"Syntax highlighting","url":"#syntax-highlighting","depth":2},{"value":"Footnotes","url":"#footnotes","depth":2},{"value":"Task Lists","url":"#task-lists","depth":2},{"value":"Tables","url":"#tables","depth":2},{"value":"Strikethrough","url":"#strikethrough","depth":2}]}]]}]]
